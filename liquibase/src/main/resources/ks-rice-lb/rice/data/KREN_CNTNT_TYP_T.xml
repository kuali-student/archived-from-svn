<databaseChangeLog xmlns="http://www.liquibase.org/xml/ns/dbchangelog" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-2.0.xsd">
	<changeSet id="KREN_CNTNT_TYP_T-initial-data" author="alubbers">
		<insert tableName="KREN_CNTNT_TYP_T">
			<column name="CNTNT_TYP_ID" value="1"/>
			<column name="CNTNT_TYP_VER_NBR" value="0"/>
			<column name="CUR_IND" value="T"/>
			<column name="DESC_TXT" value="Simple content type"/>
			<column name="NM" value="Simple"/>
			<column name="NMSPC_CD" value="notification/ContentTypeSimple"/>
			<column name="VER_NBR" value="1"/>
			<column name="XSD" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?>
&lt;!-- This schema describes a simple notification.  It only contains a content
element which is a String...about as simple as one can get -->
&lt;schema xmlns=&quot;http://www.w3.org/2001/XMLSchema&quot;
  xmlns:c=&quot;ns:notification/common&quot;
  xmlns:cs=&quot;ns:notification/ContentTypeSimple&quot;
  targetNamespace=&quot;ns:notification/ContentTypeSimple&quot;
  attributeFormDefault=&quot;unqualified&quot; 
    elementFormDefault=&quot;qualified&quot;>
  &lt;annotation>
    &lt;documentation xml:lang=&quot;en&quot;>
      Simple Content Schema
    &lt;/documentation>
  &lt;/annotation>
  &lt;import namespace=&quot;ns:notification/common&quot; schemaLocation=&quot;resource:notification/notification-common&quot; />
  &lt;!--  The content element is just a String -->
  &lt;element name=&quot;content&quot;>
    &lt;complexType>
      &lt;sequence>
        &lt;element name=&quot;message&quot; type=&quot;c:LongStringType&quot;/>
      &lt;/sequence>
    &lt;/complexType>
  &lt;/element>
&lt;/schema>"/>
			<column name="XSL" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?>
&lt;xsl:stylesheet
   version=&quot;1.0&quot; 
   xmlns:xsl=&quot;http://www.w3.org/1999/XSL/Transform&quot; 
   xmlns:n=&quot;ns:notification/ContentTypeSimple&quot; 
   xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; 
   xsi:schemaLocation=&quot;ns:notification/ContentTypeSimple resource:notification/ContentTypeSimple&quot; 
   exclude-result-prefixes=&quot;n xsi&quot;>
   &lt;xsl:output method=&quot;html&quot; omit-xml-declaration=&quot;yes&quot; />
   &lt;xsl:template match=&quot;/n:content/n:message&quot;>
      &lt;strong>
          &lt;xsl:value-of select=&quot;.&quot; disable-output-escaping=&quot;yes&quot;/>
      &lt;/strong>
   &lt;/xsl:template>
&lt;/xsl:stylesheet>"/>
		</insert>
		<insert tableName="KREN_CNTNT_TYP_T">
			<column name="CNTNT_TYP_ID" value="2"/>
			<column name="CNTNT_TYP_VER_NBR" value="0"/>
			<column name="CUR_IND" value="T"/>
			<column name="DESC_TXT" value="Event content type"/>
			<column name="NM" value="Event"/>
			<column name="NMSPC_CD" value="notification/ContentTypeEvent"/>
			<column name="VER_NBR" value="1"/>
			<column name="XSD" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?>
&lt;!-- This schema defines an generic event notification type in order for it
to be accepted into the system. -->
&lt;schema xmlns=&quot;http://www.w3.org/2001/XMLSchema&quot; xmlns:c=&quot;ns:notification/common&quot; xmlns:ce=&quot;ns:notification/ContentTypeEvent&quot; targetNamespace=&quot;ns:notification/ContentTypeEvent&quot; attributeFormDefault=&quot;unqualified&quot; elementFormDefault=&quot;qualified&quot;>
  &lt;annotation>
    &lt;documentation xml:lang=&quot;en&quot;>Content Event Schema&lt;/documentation>
  &lt;/annotation>
  &lt;import namespace=&quot;ns:notification/common&quot; schemaLocation=&quot;resource:notification/notification-common&quot; />
  &lt;!-- The content element describes the content of the notification.  It
  contains a message (a simple String) and a message element -->
  &lt;element name=&quot;content&quot;>
    &lt;complexType>
      &lt;sequence>
        &lt;element name=&quot;message&quot; type=&quot;c:LongStringType&quot;/>
        &lt;element ref=&quot;ce:event&quot;/>
      &lt;/sequence>
    &lt;/complexType>
  &lt;/element>
  &lt;!-- This is the event element.  It describes a simple event type containing a
  summary, description, location, and start/stop times -->
  &lt;element name=&quot;event&quot;>
    &lt;complexType>
      &lt;sequence>
        &lt;element name=&quot;summary&quot; type=&quot;c:NonEmptyShortStringType&quot; />
        &lt;element name=&quot;description&quot; type=&quot;c:NonEmptyShortStringType&quot; />
        &lt;element name=&quot;location&quot; type=&quot;c:NonEmptyShortStringType&quot; />
        &lt;element name=&quot;startDateTime&quot; type=&quot;c:NonEmptyShortStringType&quot; />
        &lt;element name=&quot;stopDateTime&quot; type=&quot;c:NonEmptyShortStringType&quot; />
      &lt;/sequence>
    &lt;/complexType>
  &lt;/element>
&lt;/schema>"/>
			<column name="XSL" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?>
&lt;!-- style sheet declaration: be very careful editing the following, the
     default namespace must be used otherwise elements will not match -->
&lt;xsl:stylesheet
    version=&quot;1.0&quot; 
    xmlns:xsl=&quot;http://www.w3.org/1999/XSL/Transform&quot; 
    xmlns:n=&quot;ns:notification/ContentTypeEvent&quot; 
    xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; 
    xsi:schemaLocation=&quot;ns:notification/ContentTypeEvent resource:notification/ContentTypeEvent&quot; 
    exclude-result-prefixes=&quot;n xsi&quot;>
    &lt;!-- output an html fragment -->
    &lt;xsl:output method=&quot;html&quot; indent=&quot;yes&quot; />
    &lt;!-- match everything -->
    &lt;xsl:template match=&quot;/n:content&quot; >
        &lt;table class=&quot;bord-all&quot;>
            &lt;xsl:apply-templates />
        &lt;/table>
    &lt;/xsl:template>
    &lt;!--  match message element in the default namespace and render as strong -->
    &lt;xsl:template match=&quot;n:message&quot; >
        &lt;caption>
            &lt;strong>&lt;xsl:value-of select=&quot;.&quot; disable-output-escaping=&quot;yes&quot;/>&lt;/strong>
        &lt;/caption>
    &lt;/xsl:template>
    &lt;!-- match on event in the default namespace and display all children -->
    &lt;xsl:template match=&quot;n:event&quot;>
        &lt;tr>
            &lt;td class=&quot;thnormal&quot;>&lt;strong>Summary: &lt;/strong>&lt;/td>
            &lt;td class=&quot;thnormal&quot;>&lt;xsl:value-of select=&quot;n:summary&quot; />&lt;/td>
        &lt;/tr>
        &lt;tr>
            &lt;td class=&quot;thnormal&quot;>&lt;strong>Description: &lt;/strong>&lt;/td>
            &lt;td class=&quot;thnormal&quot;>&lt;xsl:value-of select=&quot;n:description&quot; />&lt;/td>
        &lt;/tr>
        &lt;tr>
            &lt;td class=&quot;thnormal&quot;>&lt;strong>Location: &lt;/strong>&lt;/td>
            &lt;td class=&quot;thnormal&quot;>&lt;xsl:value-of select=&quot;n:location&quot; />&lt;/td>
        &lt;/tr>
        &lt;tr>
            &lt;td class=&quot;thnormal&quot;>&lt;strong>Start Time: &lt;/strong>&lt;/td>
            &lt;td class=&quot;thnormal&quot;>&lt;xsl:value-of select=&quot;n:startDateTime&quot; />&lt;/td>
        &lt;/tr>
        &lt;tr>
            &lt;td class=&quot;thnormal&quot;>&lt;strong>End Time: &lt;/strong>&lt;/td>
            &lt;td class=&quot;thnormal&quot;>&lt;xsl:value-of select=&quot;n:stopDateTime&quot; />&lt;/td>
        &lt;/tr>
    &lt;/xsl:template> 
&lt;/xsl:stylesheet>"/>
		</insert>
	</changeSet>
</databaseChangeLog>

/*
 * Copyright 2010 Wright Communications, Inc
 *
 * All rights reserved.
 */
package org.sushik.client.component.impl.base.ui;

/*
 * WARNING - DO NOT UPDATE MANUALLY
 * This class was automatically generated by the Sushi-K generator
 */
import com.google.gwt.user.client.Window;
import com.google.gwt.user.client.ui.DecoratedPopupPanel;
import com.google.gwt.user.client.ui.PopupPanel;
import com.google.gwt.user.client.ui.VerticalPanel;
import com.google.gwt.user.client.ui.Widget;
import java.util.Date;
import org.sushik.client.component.infc.base.ui.NestedComponent;
import org.sushik.client.component.infc.base.ui.Page;
import org.sushik.client.component.infc.base.ui.PopupPageScreenArea;
import org.sushik.client.component.infc.base.ui.VisibleUIComponent;

/**
 * An  object that defines a unit of user interaction
 *
 * Configured as follows:
 *
 */
public class PopupPageScreenAreaImpl extends PageScreenAreaImpl
  implements PopupPageScreenArea
{

 public PopupPageScreenAreaImpl ()
 {
  super ();
 }
 private DecoratedPopupPanel popupPanel;

 @Override
 public void init (NestedComponent parent)
 {
  new NestedComponentHelper (this).init (parent);
  popupPanel = new DecoratedPopupPanel ();
  popupPanel.setModal (true);
  popupPanel.setGlassEnabled (true);
  VerticalPanel panel = new VerticalPanel ();
  popupPanel.setWidget (panel);
  this.setImplPanel (panel);
 }

 private void log (String message)
 {
  System.out.println (new Date () + " " + this.getClass ().getName () + ":"
                      + message);
 }

 @Override
 public void hide ()
 {
  super.hide ();
  popupPanel.setVisible (false);
  popupPanel.hide ();
 }

 @Override
 public void show ()
 {
  log ("inside show");
  popupPanel.show ();
  popupPanel.setPopupPositionAndShow (new PopupPanel.PositionCallback ()
  {

   @Override
   public void setPosition (int offsetWidth, int offsetHeight)
   {
    //TODO: make this relative to the parent page's page Screen Area's location
    // on the window not the entire window itself
    log ("inside setPosition");
    int left = (Window.getClientWidth () - offsetWidth) / 3;
    int top = (Window.getClientHeight () - offsetHeight) / 3;
    popupPanel.setPopupPosition (left, top);
    if (getCurrentPage () != null)
    {
     log ("about to show page");
     getCurrentPage ().show ();
    }
   }
  });
 }
}


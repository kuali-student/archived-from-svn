/*
 * Copyright 2010 Wright Communications, Inc
 *
 * All rights reserved.
 */
package org.sushik.client.component.impl.base.ui;

/*
 * WARNING - DO NOT UPDATE MANUALLY
 * This class was automatically generated by the Sushi-K generator
 */
import com.google.gwt.user.client.ui.Panel;
import com.google.gwt.user.client.ui.VerticalPanel;
import com.google.gwt.user.client.ui.Widget;
import java.util.Date;
import org.sushik.client.component.infc.base.ui.NestedComponent;
import org.sushik.client.component.infc.base.ui.Page;
import org.sushik.client.component.infc.base.ui.PageScreenArea;
import org.sushik.client.component.infc.base.ui.VisibleUIComponent;

/**
 * An  object that defines a unit of user interaction
 *
 * Configured as follows:
 *
 */
public class PageScreenAreaImpl extends ContainerImpl
  implements PageScreenArea
{

 public PageScreenAreaImpl ()
 {
  super ();
 }
 private Panel panel;

 @Override
 public Object getImpl ()
 {
  return panel;
 }

 @Override
 public void setImpl (Object impl)
 {
  this.panel = (Panel) impl;
 }

 protected void setImplPanel (Panel panel)
 {
  this.setImpl (panel);
 }

 protected Panel getImplPanel ()
 {
  return (Panel) this.getImpl ();
 }

 @Override
 public void hide ()
 {
  panel.setVisible (false);
 }

 @Override
 public void init (NestedComponent parent)
 {
  new NestedComponentHelper (this).init (parent);
  panel = new VerticalPanel ();
 }

 private void log (String message)
 {
  System.out.println (new Date () + " " + this.getClass ().getName () + ":"
                      + message);
 }

 @Override
 public void show ()
 {
  log ("setting area visible");
  panel.setVisible (true);
  if (getCurrentPage () != null)
  {
   log ("showing current page");
   getCurrentPage ().show ();
  }
 }

 @Override
 public void setCurrentPage (Page currentPage)
 {
  if (this.getCurrentPage () != null)
  {
   log ("clearing old current page");
   this.getCurrentPage ().setPageScreenArea (null);
  }

  this.currentPage = currentPage;

  this.clear ();
  if (currentPage != null)
  {
   this.add (currentPage);
   currentPage.setPageScreenArea (this);
  }
 }

 @Override
 public void add (VisibleUIComponent component)
 {
  panel.add ((Widget) component.getImpl ());
 }

 @Override
 public void clear ()
 {
  panel.clear ();
 }
 private Page currentPage;

 @Override
 public Page getCurrentPage ()
 {
  return this.currentPage;
 }
}

